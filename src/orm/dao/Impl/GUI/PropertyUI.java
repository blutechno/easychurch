/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PropertyUI.java
 *
 * Created on May 28, 2012, 5:30:18 PM
 */
package orm.dao.Impl.GUI;

import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.util.Properties;
import javax.swing.JOptionPane;

/**
 *
 * @author jean pierre
 */
public class PropertyUI extends javax.swing.JFrame {

    /** Creates new form PropertyUI */
    public PropertyUI() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

//    private void saveProperties() {
//        try {
//            PathFinder finder = new PathFinder();
//            String path = finder.pathFinder("reports/temp.txt");
//            path=path.substring(0,path.lastIndexOf("/"));
//            ObjectOutputStream out = new ObjectOutputStream(new FileOutputStream(path+"/dbConfig.txt"));
//            if (!txtDatabase.getText().isEmpty() && txtPassword.getText().isEmpty()) {
//                out.writeObject(new DbConfig(txtDatabase.getText()));
//                out.flush();
//            } else if (!txtDatabase.getText().isEmpty() && !txtPassword.getText().isEmpty()) {
//                out.writeObject(new DbConfig(txtDatabase.getText(), txtPassword.getText()));
//                out.flush();
//            }
//            out.close();
//            JOptionPane.showMessageDialog(null, "Database Connection Setting created Successfully");
//        } catch (Exception ex) {
//            ex.printStackTrace();
//        }
//    }
    private void saveProperties() {
        Properties prop = new Properties();
        if (!txtDatabase.getText().isEmpty()) {
            try {
                //set the properties value
                prop.setProperty("database", txtDatabase.getText());
                prop.setProperty("dbpassword", txtPassword.getText());

                //save properties to project root folder
                prop.store(new FileOutputStream("C:/e_church_reports/dbConfig.properties"), null);
                JOptionPane.showMessageDialog(null, "Database Connection Setting created Successfully");


            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, ex.getCause().toString());
            }
        } else {
            JOptionPane.showMessageDialog(null, "Database URL is mandatory in connection setting. Enter localhost if you are running mysql on local machine");
        }
    }

//        private void saveProperties() {
//        PathFinder finder = new PathFinder();
//        String path = finder.pathFinder("reports/temp.txt");
//        path = path.substring(0, path.lastIndexOf("/"));
//        Properties prop = new Properties();
//        if (!txtDatabase.getText().isEmpty()) {
//            try {
//                //set the properties value
//                prop.setProperty("database", txtDatabase.getText());
//                prop.setProperty("dbpassword", txtPassword.getText());
//
//                //save properties to project root folder
//                prop.store(new FileOutputStream(path + "/dbConfig.properties"), null);
//                JOptionPane.showMessageDialog(null, "Database Connection Setting created Successfully");
//
//
//            } catch (IOException ex) {
//                JOptionPane.showMessageDialog(null, ex.getCause().toString());
//            }
//        } else {
//            JOptionPane.showMessageDialog(null, "Database URL is mandatory in connection setting. Enter localhost if you are running mysql on local machine");
//        }
//    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtDatabase = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Database Address:");

        jLabel2.setText("Password:");

        jButton1.setText("Save Properties");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtPassword)
                    .addComponent(txtDatabase, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE))
                .addContainerGap(24, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(151, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(140, 140, 140))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 122, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtDatabase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    saveProperties();
}//GEN-LAST:event_jButton1ActionPerformed
//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(PropertyUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(PropertyUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(PropertyUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(PropertyUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//
//            public void run() {
//                new PropertyUI().setVisible(true);
//            }
//        });
//    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField txtDatabase;
    private javax.swing.JPasswordField txtPassword;
    // End of variables declaration//GEN-END:variables
}
