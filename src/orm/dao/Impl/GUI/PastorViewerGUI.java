/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PastorViewerGUI.java
 *
 * Created on May 12, 2012, 10:43:09 AM
 */
package orm.dao.Impl.GUI;

import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import orm.Christian;
import orm.DAOFactory;
import orm.Pastor;

/**
 *
 * @author jean pierre
 */
public class PastorViewerGUI extends javax.swing.JInternalFrame {

    private DAOFactory daoFactory = DAOFactory.getInstance();
    private String edu[] = {"Primary", "Secondary", "Bachelor Degree", "Masters Degree", "Ph.D", "Professor"};

    /** Creates new form PastorViewerGUI */
    public PastorViewerGUI() {
        initComponents();
    }

    private void clearTable() {
        Vector<String> tableHeaders = new Vector<String>();
        Vector tableData = new Vector();
        tableHeaders.add("First Name");
        tableHeaders.add("Last Name");
        tableHeaders.add("Gender");
        tableHeaders.add("Educational Level");
        tableHeaders.add("Marital Status");
        tableHeaders.add("Spouse Name");
        Vector<Object> oneRow = new Vector<Object>();
        oneRow.add("");
        oneRow.add("");
        oneRow.add("");
        oneRow.add("");
        oneRow.add("");
        oneRow.add("");
        tableData.add(oneRow);
        table.setModel(new DefaultTableModel(tableData, tableHeaders));
    }

    private void clear() {
        clearTable();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cmbCriteria = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        cmbParameter = new javax.swing.JComboBox();
        panel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();

        setClosable(true);
        setTitle("Pastor Report Viewer");

        jToolBar1.setBackground(new java.awt.Color(0, 0, 0));
        jToolBar1.setRollover(true);

        jButton2.setBackground(new java.awt.Color(0, 0, 0));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Clear");
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton2);

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Display Result");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);

        jButton6.setBackground(new java.awt.Color(0, 0, 0));
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Exit");
        jButton6.setFocusable(false);
        jButton6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton6.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton6);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search Criteria", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 153, 0)));

        jLabel1.setText("Criteria:");

        cmbCriteria.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All", "Marital Status", "Educational Level", "Gender" }));
        cmbCriteria.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbCriteriaItemStateChanged(evt);
            }
        });
        cmbCriteria.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmbCriteriaKeyPressed(evt);
            }
        });

        jLabel2.setText("Christian:");

        cmbParameter.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbParameterItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbCriteria, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cmbParameter, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbCriteria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(cmbParameter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "View Result", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 153, 0)));
        panel.setAutoscrolls(true);

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "First Name", "Last Name", "Gender", "Educational Level", "Marital Status", "Spouse Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_NEXT_COLUMN);
        jScrollPane1.setViewportView(table);

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 686, Short.MAX_VALUE))
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 728, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(168, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    clear();
}//GEN-LAST:event_jButton2ActionPerformed

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    List<Pastor> result = new ArrayList<Pastor>();
    List<Pastor> temp = daoFactory.getPastorDAO().findAll();
    if (cmbCriteria.getSelectedIndex() == 0) {
        result.clear();
        result = temp;
    }
    if (cmbCriteria.getSelectedIndex() == 1) {
        result.clear();
        char m = ((String) cmbParameter.getSelectedItem()).charAt(0);
        for (Pastor p : temp) {
            if (p.getMaritalStatus() == m) {
                result.add(p);
            }
        }
    }
    if (cmbCriteria.getSelectedIndex() == 2) {
        result.clear();
        for (Pastor p : temp) {
            if (p.getEducationLevel().equals((String) cmbParameter.getSelectedItem())) {
                result.add(p);
            }
        }
    }
    if (cmbCriteria.getSelectedIndex() == 3) {
        result.clear();
        char s = ((String) cmbParameter.getSelectedItem()).charAt(0);
        for (Pastor p : temp) {
            if (p.getGender() == s) {
                result.add(p);
            }
        }
    }
    if (!result.isEmpty()) {
        Vector<String> tableHeaders = new Vector<String>();
        Vector tableData = new Vector();
        tableHeaders.add("First Name");
        tableHeaders.add("Last Name");
        tableHeaders.add("Gender");
        tableHeaders.add("Educational Level");
        tableHeaders.add("Marital Status");
        tableHeaders.add("Spouse Name");
        for (Pastor p : result) {
            Vector<Object> oneRow = new Vector<Object>();
            oneRow.add(p.getFirstName());
            oneRow.add(p.getLastName());
            oneRow.add((p.getGender() == 'M') ? "Male" : "Female");
            oneRow.add(p.getEducationLevel());
            String maritalStatus = "";
            switch (p.getMaritalStatus()) {
                case 'S':
                    maritalStatus = "Single";
                    break;
                case 'M':
                    maritalStatus = "Married";
                    break;
                case 'D':
                    maritalStatus = "Divorcee";
                    break;
                case 'W':
                    maritalStatus = "Widow";
                    break;
                default:
                    break;
            }
            oneRow.add(maritalStatus);
            oneRow.add(p.getSpouseName());
            tableData.add(oneRow);
        }
        table.setModel(new DefaultTableModel(tableData, tableHeaders));
    } else {
        JOptionPane.showMessageDialog(null, "No Result Found");
    }
}//GEN-LAST:event_jButton1ActionPerformed

private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
    this.dispose();
}//GEN-LAST:event_jButton6ActionPerformed

private void cmbCriteriaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbCriteriaItemStateChanged
    if (cmbCriteria.getSelectedIndex() == 1) {
        cmbParameter.removeAllItems();
        cmbParameter.addItem("Single");
        cmbParameter.addItem("Married");
        cmbParameter.addItem("Divorcee");
        cmbParameter.addItem("Widow");
    }
    if (cmbCriteria.getSelectedIndex() == 2) {
        cmbParameter.removeAllItems();
        for (String ed : edu) {
            cmbParameter.addItem(ed);
        }
    }
    if (cmbCriteria.getSelectedIndex() == 3) {
        cmbParameter.removeAllItems();
        cmbParameter.addItem("Male");
        cmbParameter.addItem("Female");
    }
}//GEN-LAST:event_cmbCriteriaItemStateChanged

private void cmbCriteriaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbCriteriaKeyPressed
// TODO add your handling code here:
}//GEN-LAST:event_cmbCriteriaKeyPressed

private void cmbParameterItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbParameterItemStateChanged
}//GEN-LAST:event_cmbParameterItemStateChanged
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cmbCriteria;
    private javax.swing.JComboBox cmbParameter;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JPanel panel;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
