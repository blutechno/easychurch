/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * OutflowGUI.java
 *
 * Created on May 17, 2012, 5:09:18 PM
 */
package orm.dao.Impl.GUI;

import java.util.Date;
import javax.swing.JOptionPane;
import orm.DAOFactory;
import orm.Notifier;
import orm.Outflow;
import orm.OutflowType;

/**
 *
 * @author jean pierre
 */
public class OutflowGUI extends javax.swing.JInternalFrame {

    private DAOFactory daoFactory = DAOFactory.getInstance();
    private String encoder;

    /** Creates new form OutflowGUI */
    public OutflowGUI() {
        initComponents();
        setTypes();
    }

    private void setTypes() {
        cmbOutflowType.removeAllItems();
        for (OutflowType t : daoFactory.getOutflowTypeDAO().findAll()) {
            cmbOutflowType.addItem(t.getOutflowTypeName());
        }
    }

    public void setEncoder(String encoder) {
        this.encoder = encoder;
        txtEncoder.setText(encoder);
    }

    private void clear() {
        cmbOutflowType.setSelectedIndex(0);
        txtOuflowAmount.setText(null);
        txtId.setText(null);
        txtCheckNumber.setText(null);
        chDate.setDate(null);
        txtReference.setText(null);
    }

    private void save() {
        if (chDate.getDate() != null) {
            if (chDate.getDate().after(new Date())) {
                JOptionPane.showMessageDialog(null, "Outflow Date cannot be greater that today's");
            } else {
                if (!txtReference.getText().equals("")) {
                    if (!txtOuflowAmount.getText().isEmpty()) {
                        if (!txtCheckNumber.getText().isEmpty()) {
                            Outflow outflow = new Outflow();
                            if(daoFactory.getOutflowDAO().findByCheckNumber(txtCheckNumber.getText())!=null){
                            outflow=daoFactory.getOutflowDAO().findByCheckNumber(txtCheckNumber.getText());
                            }
                            outflow.setOutflowType(daoFactory.getOutflowTypeDAO().findByName((String) cmbOutflowType.getSelectedItem()));
                            outflow.setOutflowAmount(Integer.parseInt(txtOuflowAmount.getText()));
                            outflow.setOutflowDate(chDate.getDate());
                            outflow.setCheckNumber(txtCheckNumber.getText());
                            outflow.setOutflowReference(txtReference.getText());
                            outflow.setUser(daoFactory.getUserDAO().findByUsername(txtEncoder.getText()));
                            boolean done = daoFactory.getOutflowDAO().saveOrUpdateOutflow(outflow);
                            if (done) {
                                int id = daoFactory.getOutflowDAO().findByCheckNumber(txtCheckNumber.getText()).getOutflowId();
                                txtId.setText("" + id);
                            }
                            Notifier.notifier(done);
                        } else {
                            JOptionPane.showMessageDialog(null, "Enter Check number before you attempt recording", "Check Number Missing", JOptionPane.WARNING_MESSAGE);
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Enter Expense amount before you attempt recording", "Expense Amount Missing", JOptionPane.WARNING_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Expense Comment/Description is required.", "Recall Message", JOptionPane.WARNING_MESSAGE);
                }
            }

        } else {
            JOptionPane.showMessageDialog(null, "You forgot to enter Expense date");
        }
    }

    private void search() {
        if (!txtCheckNumber.getText().isEmpty()) {
            try {
                Outflow expense = daoFactory.getOutflowDAO().findByCheckNumber(txtCheckNumber.getText());
                cmbOutflowType.setSelectedIndex(0);
                txtOuflowAmount.setText("" + expense.getOutflowAmount());
                txtId.setText("" + expense.getOutflowId());
                txtCheckNumber.setText(expense.getCheckNumber());
                chDate.setDate(expense.getOutflowDate());
                txtReference.setText(expense.getOutflowReference());
            } catch (Exception ex) {
            }
        } else {
            JOptionPane.showMessageDialog(null, "Enter Check number of the expense you are searching");
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        Search = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cmbOutflowType = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        txtOuflowAmount = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        chDate = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        txtEncoder = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtReference = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        txtCheckNumber = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();

        setClosable(true);
        setTitle("Expenses");

        jToolBar1.setBackground(new java.awt.Color(0, 0, 0));
        jToolBar1.setRollover(true);

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Clear");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);

        jButton2.setBackground(new java.awt.Color(0, 0, 0));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Save");
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton2);

        Search.setBackground(new java.awt.Color(0, 0, 0));
        Search.setForeground(new java.awt.Color(255, 255, 255));
        Search.setText("Search");
        Search.setFocusable(false);
        Search.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Search.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });
        jToolBar1.add(Search);

        jButton6.setBackground(new java.awt.Color(0, 0, 0));
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Exit");
        jButton6.setFocusable(false);
        jButton6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton6.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton6);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Outflow", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 153, 0)));

        jLabel1.setText("Outflow Type:");

        cmbOutflowType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel2.setText("Outflow Amount:");

        txtOuflowAmount.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtOuflowAmountCaretUpdate(evt);
            }
        });

        jLabel3.setText("Date:");

        chDate.setDateFormatString("dd/MM/yyyy");

        jLabel4.setText("Encoder:");

        txtEncoder.setBackground(new java.awt.Color(204, 204, 204));
        txtEncoder.setEditable(false);
        txtEncoder.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        jLabel5.setText("Outflow Explanation:");

        txtReference.setColumns(20);
        txtReference.setLineWrap(true);
        txtReference.setRows(5);
        jScrollPane1.setViewportView(txtReference);

        jLabel6.setText("Check Number:");

        jLabel7.setText("Record Id:");

        txtId.setBackground(new java.awt.Color(204, 204, 204));
        txtId.setEditable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 484, Short.MAX_VALUE)
                    .addComponent(jLabel5)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(chDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtCheckNumber, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE))
                                .addGap(10, 10, 10)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cmbOutflowType, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel7)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtEncoder, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                            .addComponent(txtOuflowAmount, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                            .addComponent(txtId, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbOutflowType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(txtOuflowAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(txtCheckNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(txtEncoder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(chDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 536, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    clear();
}//GEN-LAST:event_jButton1ActionPerformed

private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    save();
}//GEN-LAST:event_jButton2ActionPerformed

private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
    this.dispose();
}//GEN-LAST:event_jButton6ActionPerformed

private void txtOuflowAmountCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtOuflowAmountCaretUpdate
    if (!txtOuflowAmount.getText().isEmpty()) {
        try {
            Integer.parseInt(txtOuflowAmount.getText());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Enter Income Amount as a number please");
        }
    }
}//GEN-LAST:event_txtOuflowAmountCaretUpdate

private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
    search();
}//GEN-LAST:event_SearchActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Search;
    private com.toedter.calendar.JDateChooser chDate;
    private javax.swing.JComboBox cmbOutflowType;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTextField txtCheckNumber;
    private javax.swing.JTextField txtEncoder;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtOuflowAmount;
    private javax.swing.JTextArea txtReference;
    // End of variables declaration//GEN-END:variables
}
